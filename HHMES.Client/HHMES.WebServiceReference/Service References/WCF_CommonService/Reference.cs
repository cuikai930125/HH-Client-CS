//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HHMES.WebServiceReference.WCF_CommonService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF_CommonService.ICommonService")]
    public interface ICommonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/BackupDatabase", ReplyAction="http://tempuri.org/ICommonService/BackupDatabaseResponse")]
        bool BackupDatabase(string DBNAME, string BKPATH);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetAttachedFiles", ReplyAction="http://tempuri.org/ICommonService/GetAttachedFilesResponse")]
        byte[] GetAttachedFiles(byte[] loginTicket, string docID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetBackupHistory", ReplyAction="http://tempuri.org/ICommonService/GetBackupHistoryResponse")]
        byte[] GetBackupHistory(byte[] loginTicket, int topList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetBusinessTables", ReplyAction="http://tempuri.org/ICommonService/GetBusinessTablesResponse")]
        byte[] GetBusinessTables(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetDB4Backup", ReplyAction="http://tempuri.org/ICommonService/GetDB4BackupResponse")]
        byte[] GetDB4Backup(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetLogFieldDef", ReplyAction="http://tempuri.org/ICommonService/GetLogFieldDefResponse")]
        byte[] GetLogFieldDef(byte[] loginTicket, string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetModules", ReplyAction="http://tempuri.org/ICommonService/GetModulesResponse")]
        byte[] GetModules(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetSystemDataSet", ReplyAction="http://tempuri.org/ICommonService/GetSystemDataSetResponse")]
        byte[] GetSystemDataSet(byte[] validationTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetTableFields", ReplyAction="http://tempuri.org/ICommonService/GetTableFieldsResponse")]
        byte[] GetTableFields(byte[] loginTicket, string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetTableFieldsDef", ReplyAction="http://tempuri.org/ICommonService/GetTableFieldsDefResponse")]
        byte[] GetTableFieldsDef(byte[] loginTicket, string tableName, bool onlyDisplayField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetTracedFields", ReplyAction="http://tempuri.org/ICommonService/GetTracedFieldsResponse")]
        string[] GetTracedFields(byte[] loginTicket, string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/RestoreDatabase", ReplyAction="http://tempuri.org/ICommonService/RestoreDatabaseResponse")]
        bool RestoreDatabase(string BKFILE, string DBNAME);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SaveFieldDef", ReplyAction="http://tempuri.org/ICommonService/SaveFieldDefResponse")]
        bool SaveFieldDef(byte[] loginTicket, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SearchLog", ReplyAction="http://tempuri.org/ICommonService/SearchLogResponse")]
        byte[] SearchLog(byte[] loginTicket, string logUser, string tableName, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/TestConnection", ReplyAction="http://tempuri.org/ICommonService/TestConnectionResponse")]
        bool TestConnection(byte[] validationTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/WriteLog", ReplyAction="http://tempuri.org/ICommonService/WriteLogResponse")]
        void WriteLog(byte[] loginTicket, string logID, byte[] originalData, byte[] changes, string tableName, string keyFieldName, bool isMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetDataSN", ReplyAction="http://tempuri.org/ICommonService/GetDataSNResponse")]
        string GetDataSN(byte[] loginTicket, string dataCode, bool asHeader);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SearchOutstanding", ReplyAction="http://tempuri.org/ICommonService/SearchOutstandingResponse")]
        byte[] SearchOutstanding(byte[] loginTicket, string invoiceNo, string customer, System.DateTime dateFrom, System.DateTime dateTo, System.DateTime dateEnd, string outstandingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SyncServerTime", ReplyAction="http://tempuri.org/ICommonService/SyncServerTimeResponse")]
        void SyncServerTime();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonServiceChannel : HHMES.WebServiceReference.WCF_CommonService.ICommonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonServiceClient : System.ServiceModel.ClientBase<HHMES.WebServiceReference.WCF_CommonService.ICommonService>, HHMES.WebServiceReference.WCF_CommonService.ICommonService {
        
        public CommonServiceClient() {
        }
        
        public CommonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool BackupDatabase(string DBNAME, string BKPATH) {
            return base.Channel.BackupDatabase(DBNAME, BKPATH);
        }
        
        public byte[] GetAttachedFiles(byte[] loginTicket, string docID) {
            return base.Channel.GetAttachedFiles(loginTicket, docID);
        }
        
        public byte[] GetBackupHistory(byte[] loginTicket, int topList) {
            return base.Channel.GetBackupHistory(loginTicket, topList);
        }
        
        public byte[] GetBusinessTables(byte[] loginTicket) {
            return base.Channel.GetBusinessTables(loginTicket);
        }
        
        public byte[] GetDB4Backup(byte[] loginTicket) {
            return base.Channel.GetDB4Backup(loginTicket);
        }
        
        public byte[] GetLogFieldDef(byte[] loginTicket, string tableName) {
            return base.Channel.GetLogFieldDef(loginTicket, tableName);
        }
        
        public byte[] GetModules(byte[] loginTicket) {
            return base.Channel.GetModules(loginTicket);
        }
        
        public byte[] GetSystemDataSet(byte[] validationTicket) {
            return base.Channel.GetSystemDataSet(validationTicket);
        }
        
        public byte[] GetTableFields(byte[] loginTicket, string tableName) {
            return base.Channel.GetTableFields(loginTicket, tableName);
        }
        
        public byte[] GetTableFieldsDef(byte[] loginTicket, string tableName, bool onlyDisplayField) {
            return base.Channel.GetTableFieldsDef(loginTicket, tableName, onlyDisplayField);
        }
        
        public string[] GetTracedFields(byte[] loginTicket, string tableName) {
            return base.Channel.GetTracedFields(loginTicket, tableName);
        }
        
        public bool RestoreDatabase(string BKFILE, string DBNAME) {
            return base.Channel.RestoreDatabase(BKFILE, DBNAME);
        }
        
        public bool SaveFieldDef(byte[] loginTicket, byte[] data) {
            return base.Channel.SaveFieldDef(loginTicket, data);
        }
        
        public byte[] SearchLog(byte[] loginTicket, string logUser, string tableName, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.SearchLog(loginTicket, logUser, tableName, dateFrom, dateTo);
        }
        
        public bool TestConnection(byte[] validationTicket) {
            return base.Channel.TestConnection(validationTicket);
        }
        
        public void WriteLog(byte[] loginTicket, string logID, byte[] originalData, byte[] changes, string tableName, string keyFieldName, bool isMaster) {
            base.Channel.WriteLog(loginTicket, logID, originalData, changes, tableName, keyFieldName, isMaster);
        }
        
        public string GetDataSN(byte[] loginTicket, string dataCode, bool asHeader) {
            return base.Channel.GetDataSN(loginTicket, dataCode, asHeader);
        }
        
        public byte[] SearchOutstanding(byte[] loginTicket, string invoiceNo, string customer, System.DateTime dateFrom, System.DateTime dateTo, System.DateTime dateEnd, string outstandingType) {
            return base.Channel.SearchOutstanding(loginTicket, invoiceNo, customer, dateFrom, dateTo, dateEnd, outstandingType);
        }
        
        public void SyncServerTime() {
            base.Channel.SyncServerTime();
        }
    }
}
