//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HHMES.WebServiceReference.WCF_AccountModuleService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF_AccountModuleService.IAccountModuleService")]
    public interface IAccountModuleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AR_ApprovalBusiness", ReplyAction="http://tempuri.org/IAccountModuleService/AR_ApprovalBusinessResponse")]
        void AR_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AR_CheckNoExists", ReplyAction="http://tempuri.org/IAccountModuleService/AR_CheckNoExistsResponse")]
        bool AR_CheckNoExists(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AR_Delete", ReplyAction="http://tempuri.org/IAccountModuleService/AR_DeleteResponse")]
        bool AR_Delete(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AR_GetBusinessByKey", ReplyAction="http://tempuri.org/IAccountModuleService/AR_GetBusinessByKeyResponse")]
        byte[] AR_GetBusinessByKey(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AR_GetSummaryByParam", ReplyAction="http://tempuri.org/IAccountModuleService/AR_GetSummaryByParamResponse")]
        byte[] AR_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AR_Update", ReplyAction="http://tempuri.org/IAccountModuleService/AR_UpdateResponse")]
        byte[] AR_Update(byte[] loginTicket, byte[] saveData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AR_GetReportData_Checklist", ReplyAction="http://tempuri.org/IAccountModuleService/AR_GetReportData_ChecklistResponse")]
        byte[] AR_GetReportData_Checklist(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AR_GetReportData", ReplyAction="http://tempuri.org/IAccountModuleService/AR_GetReportDataResponse")]
        byte[] AR_GetReportData(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AP_ApprovalBusiness", ReplyAction="http://tempuri.org/IAccountModuleService/AP_ApprovalBusinessResponse")]
        void AP_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AP_CheckNoExists", ReplyAction="http://tempuri.org/IAccountModuleService/AP_CheckNoExistsResponse")]
        bool AP_CheckNoExists(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AP_Delete", ReplyAction="http://tempuri.org/IAccountModuleService/AP_DeleteResponse")]
        bool AP_Delete(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AP_GetBusinessByKey", ReplyAction="http://tempuri.org/IAccountModuleService/AP_GetBusinessByKeyResponse")]
        byte[] AP_GetBusinessByKey(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AP_GetSummaryByParam", ReplyAction="http://tempuri.org/IAccountModuleService/AP_GetSummaryByParamResponse")]
        byte[] AP_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AP_Update", ReplyAction="http://tempuri.org/IAccountModuleService/AP_UpdateResponse")]
        byte[] AP_Update(byte[] loginTicket, byte[] saveData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountModuleService/AP_GetReportData", ReplyAction="http://tempuri.org/IAccountModuleService/AP_GetReportDataResponse")]
        byte[] AP_GetReportData(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime DateFrom, System.DateTime DateTo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountModuleServiceChannel : HHMES.WebServiceReference.WCF_AccountModuleService.IAccountModuleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountModuleServiceClient : System.ServiceModel.ClientBase<HHMES.WebServiceReference.WCF_AccountModuleService.IAccountModuleService>, HHMES.WebServiceReference.WCF_AccountModuleService.IAccountModuleService {
        
        public AccountModuleServiceClient() {
        }
        
        public AccountModuleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountModuleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountModuleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountModuleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AR_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate) {
            base.Channel.AR_ApprovalBusiness(loginTicket, keyValue, flagApp, appUser, appDate);
        }
        
        public bool AR_CheckNoExists(byte[] loginTicket, string keyValue) {
            return base.Channel.AR_CheckNoExists(loginTicket, keyValue);
        }
        
        public bool AR_Delete(byte[] loginTicket, string keyValue) {
            return base.Channel.AR_Delete(loginTicket, keyValue);
        }
        
        public byte[] AR_GetBusinessByKey(byte[] loginTicket, string keyValue) {
            return base.Channel.AR_GetBusinessByKey(loginTicket, keyValue);
        }
        
        public byte[] AR_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo) {
            return base.Channel.AR_GetSummaryByParam(loginTicket, DocNoFrom, DocNoTo, docDateFrom, docDateTo);
        }
        
        public byte[] AR_Update(byte[] loginTicket, byte[] saveData) {
            return base.Channel.AR_Update(loginTicket, saveData);
        }
        
        public byte[] AR_GetReportData_Checklist(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.AR_GetReportData_Checklist(loginTicket, DocNoFrom, DocNoTo, DateFrom, DateTo);
        }
        
        public byte[] AR_GetReportData(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.AR_GetReportData(loginTicket, DocNoFrom, DocNoTo, DateFrom, DateTo);
        }
        
        public void AP_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate) {
            base.Channel.AP_ApprovalBusiness(loginTicket, keyValue, flagApp, appUser, appDate);
        }
        
        public bool AP_CheckNoExists(byte[] loginTicket, string keyValue) {
            return base.Channel.AP_CheckNoExists(loginTicket, keyValue);
        }
        
        public bool AP_Delete(byte[] loginTicket, string keyValue) {
            return base.Channel.AP_Delete(loginTicket, keyValue);
        }
        
        public byte[] AP_GetBusinessByKey(byte[] loginTicket, string keyValue) {
            return base.Channel.AP_GetBusinessByKey(loginTicket, keyValue);
        }
        
        public byte[] AP_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo) {
            return base.Channel.AP_GetSummaryByParam(loginTicket, DocNoFrom, DocNoTo, docDateFrom, docDateTo);
        }
        
        public byte[] AP_Update(byte[] loginTicket, byte[] saveData) {
            return base.Channel.AP_Update(loginTicket, saveData);
        }
        
        public byte[] AP_GetReportData(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.AP_GetReportData(loginTicket, DocNoFrom, DocNoTo, DateFrom, DateTo);
        }
    }
}
