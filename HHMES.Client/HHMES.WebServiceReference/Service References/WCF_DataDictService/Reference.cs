//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HHMES.WebServiceReference.WCF_DataDictService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF_DataDictService.IDataDictService")]
    public interface IDataDictService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/AddCommonType", ReplyAction="http://tempuri.org/IDataDictService/AddCommonTypeResponse")]
        bool AddCommonType(byte[] loginTicket, int code, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/CheckNoExists", ReplyAction="http://tempuri.org/IDataDictService/CheckNoExistsResponse")]
        bool CheckNoExists(byte[] loginTicket, string keyValue, string ORM_TypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/CheckNoExistsBySql", ReplyAction="http://tempuri.org/IDataDictService/CheckNoExistsBySqlResponse")]
        bool CheckNoExistsBySql(byte[] loginTicket, string TableName, string SqlCondition, string ORM_TypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/Delete", ReplyAction="http://tempuri.org/IDataDictService/DeleteResponse")]
        bool Delete(byte[] loginTicket, string keyValue, string ORM_TypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/DeleteCommonType", ReplyAction="http://tempuri.org/IDataDictService/DeleteCommonTypeResponse")]
        bool DeleteCommonType(byte[] loginTicket, int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/DownloadDicts", ReplyAction="http://tempuri.org/IDataDictService/DownloadDictsResponse")]
        byte[] DownloadDicts(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/ExecuteProcedure", ReplyAction="http://tempuri.org/IDataDictService/ExecuteProcedureResponse")]
        byte[] ExecuteProcedure(byte[] loginTicket, string sqlcmd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/FuzzySearchCustomer", ReplyAction="http://tempuri.org/IDataDictService/FuzzySearchCustomerResponse")]
        byte[] FuzzySearchCustomer(byte[] loginTicket, string customerFrom, string customerTo, string customerName, string customerAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/FuzzySearchCustomerByContent", ReplyAction="http://tempuri.org/IDataDictService/FuzzySearchCustomerByContentResponse")]
        byte[] FuzzySearchCustomerByContent(byte[] loginTicket, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/FuzzySearchCustomerByAttributes", ReplyAction="http://tempuri.org/IDataDictService/FuzzySearchCustomerByAttributesResponse")]
        byte[] FuzzySearchCustomerByAttributes(byte[] loginTicket, string attributeCodes, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/FuzzySearchProduct", ReplyAction="http://tempuri.org/IDataDictService/FuzzySearchProductResponse")]
        byte[] FuzzySearchProduct(byte[] loginTicket, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/GetCustomerByAttributeCodes", ReplyAction="http://tempuri.org/IDataDictService/GetCustomerByAttributeCodesResponse")]
        byte[] GetCustomerByAttributeCodes(byte[] loginTicket, string attributeCodes, bool nameWithCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/GetDataByKey", ReplyAction="http://tempuri.org/IDataDictService/GetDataByKeyResponse")]
        byte[] GetDataByKey(byte[] loginTicket, string ORM_TypeName, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/GetDataDictByTableName", ReplyAction="http://tempuri.org/IDataDictService/GetDataDictByTableNameResponse")]
        byte[] GetDataDictByTableName(byte[] loginTicket, string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/GetSummaryData", ReplyAction="http://tempuri.org/IDataDictService/GetSummaryDataResponse")]
        byte[] GetSummaryData(byte[] loginTicket, string ORM_TypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/IsExistsCommonType", ReplyAction="http://tempuri.org/IDataDictService/IsExistsCommonTypeResponse")]
        bool IsExistsCommonType(byte[] loginTicket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/SearchCommonType", ReplyAction="http://tempuri.org/IDataDictService/SearchCommonTypeResponse")]
        byte[] SearchCommonType(byte[] loginTicket, int dataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/Update", ReplyAction="http://tempuri.org/IDataDictService/UpdateResponse")]
        bool Update(byte[] loginTicket, byte[] bs, string ORM_TypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataDictService/UpdateEx", ReplyAction="http://tempuri.org/IDataDictService/UpdateExResponse")]
        byte[] UpdateEx(byte[] loginTicket, byte[] bs, string ORM_TypeName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataDictServiceChannel : HHMES.WebServiceReference.WCF_DataDictService.IDataDictService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataDictServiceClient : System.ServiceModel.ClientBase<HHMES.WebServiceReference.WCF_DataDictService.IDataDictService>, HHMES.WebServiceReference.WCF_DataDictService.IDataDictService {
        
        public DataDictServiceClient() {
        }
        
        public DataDictServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataDictServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataDictServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataDictServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddCommonType(byte[] loginTicket, int code, string name) {
            return base.Channel.AddCommonType(loginTicket, code, name);
        }
        
        public bool CheckNoExists(byte[] loginTicket, string keyValue, string ORM_TypeName) {
            return base.Channel.CheckNoExists(loginTicket, keyValue, ORM_TypeName);
        }
        
        public bool CheckNoExistsBySql(byte[] loginTicket, string TableName, string SqlCondition, string ORM_TypeName) {
            return base.Channel.CheckNoExistsBySql(loginTicket, TableName, SqlCondition, ORM_TypeName);
        }
        
        public bool Delete(byte[] loginTicket, string keyValue, string ORM_TypeName) {
            return base.Channel.Delete(loginTicket, keyValue, ORM_TypeName);
        }
        
        public bool DeleteCommonType(byte[] loginTicket, int code) {
            return base.Channel.DeleteCommonType(loginTicket, code);
        }
        
        public byte[] DownloadDicts(byte[] loginTicket) {
            return base.Channel.DownloadDicts(loginTicket);
        }
        
        public byte[] ExecuteProcedure(byte[] loginTicket, string sqlcmd) {
            return base.Channel.ExecuteProcedure(loginTicket, sqlcmd);
        }
        
        public byte[] FuzzySearchCustomer(byte[] loginTicket, string customerFrom, string customerTo, string customerName, string customerAttribute) {
            return base.Channel.FuzzySearchCustomer(loginTicket, customerFrom, customerTo, customerName, customerAttribute);
        }
        
        public byte[] FuzzySearchCustomerByContent(byte[] loginTicket, string content) {
            return base.Channel.FuzzySearchCustomerByContent(loginTicket, content);
        }
        
        public byte[] FuzzySearchCustomerByAttributes(byte[] loginTicket, string attributeCodes, string content) {
            return base.Channel.FuzzySearchCustomerByAttributes(loginTicket, attributeCodes, content);
        }
        
        public byte[] FuzzySearchProduct(byte[] loginTicket, string content) {
            return base.Channel.FuzzySearchProduct(loginTicket, content);
        }
        
        public byte[] GetCustomerByAttributeCodes(byte[] loginTicket, string attributeCodes, bool nameWithCode) {
            return base.Channel.GetCustomerByAttributeCodes(loginTicket, attributeCodes, nameWithCode);
        }
        
        public byte[] GetDataByKey(byte[] loginTicket, string ORM_TypeName, string key) {
            return base.Channel.GetDataByKey(loginTicket, ORM_TypeName, key);
        }
        
        public byte[] GetDataDictByTableName(byte[] loginTicket, string tableName) {
            return base.Channel.GetDataDictByTableName(loginTicket, tableName);
        }
        
        public byte[] GetSummaryData(byte[] loginTicket, string ORM_TypeName) {
            return base.Channel.GetSummaryData(loginTicket, ORM_TypeName);
        }
        
        public bool IsExistsCommonType(byte[] loginTicket, int id) {
            return base.Channel.IsExistsCommonType(loginTicket, id);
        }
        
        public byte[] SearchCommonType(byte[] loginTicket, int dataType) {
            return base.Channel.SearchCommonType(loginTicket, dataType);
        }
        
        public bool Update(byte[] loginTicket, byte[] bs, string ORM_TypeName) {
            return base.Channel.Update(loginTicket, bs, ORM_TypeName);
        }
        
        public byte[] UpdateEx(byte[] loginTicket, byte[] bs, string ORM_TypeName) {
            return base.Channel.UpdateEx(loginTicket, bs, ORM_TypeName);
        }
    }
}
