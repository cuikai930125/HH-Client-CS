//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HHMES.WebServiceReference.WCF_SystemSecurityService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF_SystemSecurityService.ISystemSecurityService")]
    public interface ISystemSecurityService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_GetUsers", ReplyAction="http://tempuri.org/ISystemSecurityService/U_GetUsersResponse")]
        byte[] U_GetUsers(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_GetUserReportData", ReplyAction="http://tempuri.org/ISystemSecurityService/U_GetUserReportDataResponse")]
        byte[] U_GetUserReportData(byte[] loginTicket, System.DateTime createDateFrom, System.DateTime createDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_GetUser", ReplyAction="http://tempuri.org/ISystemSecurityService/U_GetUserResponse")]
        byte[] U_GetUser(byte[] loginTicket, string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_GetUserGroups", ReplyAction="http://tempuri.org/ISystemSecurityService/U_GetUserGroupsResponse")]
        byte[] U_GetUserGroups(byte[] loginTicket, string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_GetUserByNovellID", ReplyAction="http://tempuri.org/ISystemSecurityService/U_GetUserByNovellIDResponse")]
        byte[] U_GetUserByNovellID(byte[] loginTicket, string novellAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_UpdateUser", ReplyAction="http://tempuri.org/ISystemSecurityService/U_UpdateUserResponse")]
        bool U_UpdateUser(byte[] loginTicket, byte[] userData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_DeleteUser", ReplyAction="http://tempuri.org/ISystemSecurityService/U_DeleteUserResponse")]
        bool U_DeleteUser(byte[] loginTicket, string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_ExistsUser", ReplyAction="http://tempuri.org/ISystemSecurityService/U_ExistsUserResponse")]
        bool U_ExistsUser(byte[] loginTicket, string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_ModifyPassword", ReplyAction="http://tempuri.org/ISystemSecurityService/U_ModifyPasswordResponse")]
        bool U_ModifyPassword(byte[] loginTicket, string account, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_GetUserAuthorities", ReplyAction="http://tempuri.org/ISystemSecurityService/U_GetUserAuthoritiesResponse")]
        byte[] U_GetUserAuthorities(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_Logout", ReplyAction="http://tempuri.org/ISystemSecurityService/U_LogoutResponse")]
        void U_Logout(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_Login", ReplyAction="http://tempuri.org/ISystemSecurityService/U_LoginResponse")]
        byte[] U_Login(byte[] validationTicket, byte[] loginUser, char LoginUserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_ModifyPwdDirect", ReplyAction="http://tempuri.org/ISystemSecurityService/U_ModifyPwdDirectResponse")]
        bool U_ModifyPwdDirect(byte[] validationTicket, string account, string pwd, string DBName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/U_GetUserDirect", ReplyAction="http://tempuri.org/ISystemSecurityService/U_GetUserDirectResponse")]
        byte[] U_GetUserDirect(byte[] validationTicket, string account, string DBName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/G_GetAuthorityItem", ReplyAction="http://tempuri.org/ISystemSecurityService/G_GetAuthorityItemResponse")]
        byte[] G_GetAuthorityItem(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/G_GetUserGroup", ReplyAction="http://tempuri.org/ISystemSecurityService/G_GetUserGroupResponse")]
        byte[] G_GetUserGroup(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/G_GetUserGroupByCode", ReplyAction="http://tempuri.org/ISystemSecurityService/G_GetUserGroupByCodeResponse")]
        byte[] G_GetUserGroupByCode(byte[] loginTicket, string groupCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/G_GetFormTagCustomName", ReplyAction="http://tempuri.org/ISystemSecurityService/G_GetFormTagCustomNameResponse")]
        byte[] G_GetFormTagCustomName(byte[] loginTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/G_CheckNoExists", ReplyAction="http://tempuri.org/ISystemSecurityService/G_CheckNoExistsResponse")]
        bool G_CheckNoExists(byte[] loginTicket, string groupCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/G_DeleteGroupByKey", ReplyAction="http://tempuri.org/ISystemSecurityService/G_DeleteGroupByKeyResponse")]
        bool G_DeleteGroupByKey(byte[] loginTicket, string groupCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemSecurityService/G_GetFormAuthority", ReplyAction="http://tempuri.org/ISystemSecurityService/G_GetFormAuthorityResponse")]
        int G_GetFormAuthority(byte[] loginTicket, string account, int moduleID, string menuName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISystemSecurityServiceChannel : HHMES.WebServiceReference.WCF_SystemSecurityService.ISystemSecurityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystemSecurityServiceClient : System.ServiceModel.ClientBase<HHMES.WebServiceReference.WCF_SystemSecurityService.ISystemSecurityService>, HHMES.WebServiceReference.WCF_SystemSecurityService.ISystemSecurityService {
        
        public SystemSecurityServiceClient() {
        }
        
        public SystemSecurityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SystemSecurityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemSecurityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemSecurityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] U_GetUsers(byte[] loginTicket) {
            return base.Channel.U_GetUsers(loginTicket);
        }
        
        public byte[] U_GetUserReportData(byte[] loginTicket, System.DateTime createDateFrom, System.DateTime createDateTo) {
            return base.Channel.U_GetUserReportData(loginTicket, createDateFrom, createDateTo);
        }
        
        public byte[] U_GetUser(byte[] loginTicket, string account) {
            return base.Channel.U_GetUser(loginTicket, account);
        }
        
        public byte[] U_GetUserGroups(byte[] loginTicket, string account) {
            return base.Channel.U_GetUserGroups(loginTicket, account);
        }
        
        public byte[] U_GetUserByNovellID(byte[] loginTicket, string novellAccount) {
            return base.Channel.U_GetUserByNovellID(loginTicket, novellAccount);
        }
        
        public bool U_UpdateUser(byte[] loginTicket, byte[] userData) {
            return base.Channel.U_UpdateUser(loginTicket, userData);
        }
        
        public bool U_DeleteUser(byte[] loginTicket, string account) {
            return base.Channel.U_DeleteUser(loginTicket, account);
        }
        
        public bool U_ExistsUser(byte[] loginTicket, string account) {
            return base.Channel.U_ExistsUser(loginTicket, account);
        }
        
        public bool U_ModifyPassword(byte[] loginTicket, string account, string pwd) {
            return base.Channel.U_ModifyPassword(loginTicket, account, pwd);
        }
        
        public byte[] U_GetUserAuthorities(byte[] loginTicket) {
            return base.Channel.U_GetUserAuthorities(loginTicket);
        }
        
        public void U_Logout(byte[] loginTicket) {
            base.Channel.U_Logout(loginTicket);
        }
        
        public byte[] U_Login(byte[] validationTicket, byte[] loginUser, char LoginUserType) {
            return base.Channel.U_Login(validationTicket, loginUser, LoginUserType);
        }
        
        public bool U_ModifyPwdDirect(byte[] validationTicket, string account, string pwd, string DBName) {
            return base.Channel.U_ModifyPwdDirect(validationTicket, account, pwd, DBName);
        }
        
        public byte[] U_GetUserDirect(byte[] validationTicket, string account, string DBName) {
            return base.Channel.U_GetUserDirect(validationTicket, account, DBName);
        }
        
        public byte[] G_GetAuthorityItem(byte[] loginTicket) {
            return base.Channel.G_GetAuthorityItem(loginTicket);
        }
        
        public byte[] G_GetUserGroup(byte[] loginTicket) {
            return base.Channel.G_GetUserGroup(loginTicket);
        }
        
        public byte[] G_GetUserGroupByCode(byte[] loginTicket, string groupCode) {
            return base.Channel.G_GetUserGroupByCode(loginTicket, groupCode);
        }
        
        public byte[] G_GetFormTagCustomName(byte[] loginTicket) {
            return base.Channel.G_GetFormTagCustomName(loginTicket);
        }
        
        public bool G_CheckNoExists(byte[] loginTicket, string groupCode) {
            return base.Channel.G_CheckNoExists(loginTicket, groupCode);
        }
        
        public bool G_DeleteGroupByKey(byte[] loginTicket, string groupCode) {
            return base.Channel.G_DeleteGroupByKey(loginTicket, groupCode);
        }
        
        public int G_GetFormAuthority(byte[] loginTicket, string account, int moduleID, string menuName) {
            return base.Channel.G_GetFormAuthority(loginTicket, account, moduleID, menuName);
        }
    }
}
