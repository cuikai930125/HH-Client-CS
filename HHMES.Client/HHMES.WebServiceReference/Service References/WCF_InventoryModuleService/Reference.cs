//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HHMES.WebServiceReference.WCF_InventoryModuleService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF_InventoryModuleService.IInventoryModuleService")]
    public interface IInventoryModuleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IA_ApprovalBusiness", ReplyAction="http://tempuri.org/IInventoryModuleService/IA_ApprovalBusinessResponse")]
        void IA_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IA_CheckNoExists", ReplyAction="http://tempuri.org/IInventoryModuleService/IA_CheckNoExistsResponse")]
        bool IA_CheckNoExists(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IA_Delete", ReplyAction="http://tempuri.org/IInventoryModuleService/IA_DeleteResponse")]
        bool IA_Delete(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IA_GetBusinessByKey", ReplyAction="http://tempuri.org/IInventoryModuleService/IA_GetBusinessByKeyResponse")]
        byte[] IA_GetBusinessByKey(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IA_GetSummaryByParam", ReplyAction="http://tempuri.org/IInventoryModuleService/IA_GetSummaryByParamResponse")]
        byte[] IA_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IA_Update", ReplyAction="http://tempuri.org/IInventoryModuleService/IA_UpdateResponse")]
        byte[] IA_Update(byte[] loginTicket, byte[] saveData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IC_ApprovalBusiness", ReplyAction="http://tempuri.org/IInventoryModuleService/IC_ApprovalBusinessResponse")]
        void IC_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IC_CheckNoExists", ReplyAction="http://tempuri.org/IInventoryModuleService/IC_CheckNoExistsResponse")]
        bool IC_CheckNoExists(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IC_Delete", ReplyAction="http://tempuri.org/IInventoryModuleService/IC_DeleteResponse")]
        bool IC_Delete(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IC_GetBusinessByKey", ReplyAction="http://tempuri.org/IInventoryModuleService/IC_GetBusinessByKeyResponse")]
        byte[] IC_GetBusinessByKey(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IC_GetSummaryByParam", ReplyAction="http://tempuri.org/IInventoryModuleService/IC_GetSummaryByParamResponse")]
        byte[] IC_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IC_Update", ReplyAction="http://tempuri.org/IInventoryModuleService/IC_UpdateResponse")]
        byte[] IC_Update(byte[] loginTicket, byte[] saveData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IN_ApprovalBusiness", ReplyAction="http://tempuri.org/IInventoryModuleService/IN_ApprovalBusinessResponse")]
        void IN_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IN_CheckNoExists", ReplyAction="http://tempuri.org/IInventoryModuleService/IN_CheckNoExistsResponse")]
        bool IN_CheckNoExists(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IN_Delete", ReplyAction="http://tempuri.org/IInventoryModuleService/IN_DeleteResponse")]
        bool IN_Delete(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IN_GetBusinessByKey", ReplyAction="http://tempuri.org/IInventoryModuleService/IN_GetBusinessByKeyResponse")]
        byte[] IN_GetBusinessByKey(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IN_GetSummaryByParam", ReplyAction="http://tempuri.org/IInventoryModuleService/IN_GetSummaryByParamResponse")]
        byte[] IN_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IN_Update", ReplyAction="http://tempuri.org/IInventoryModuleService/IN_UpdateResponse")]
        byte[] IN_Update(byte[] loginTicket, byte[] saveData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IO_ApprovalBusiness", ReplyAction="http://tempuri.org/IInventoryModuleService/IO_ApprovalBusinessResponse")]
        void IO_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IO_CheckNoExists", ReplyAction="http://tempuri.org/IInventoryModuleService/IO_CheckNoExistsResponse")]
        bool IO_CheckNoExists(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IO_Delete", ReplyAction="http://tempuri.org/IInventoryModuleService/IO_DeleteResponse")]
        bool IO_Delete(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IO_GetBusinessByKey", ReplyAction="http://tempuri.org/IInventoryModuleService/IO_GetBusinessByKeyResponse")]
        byte[] IO_GetBusinessByKey(byte[] loginTicket, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IO_GetSummaryByParam", ReplyAction="http://tempuri.org/IInventoryModuleService/IO_GetSummaryByParamResponse")]
        byte[] IO_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryModuleService/IO_Update", ReplyAction="http://tempuri.org/IInventoryModuleService/IO_UpdateResponse")]
        byte[] IO_Update(byte[] loginTicket, byte[] saveData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryModuleServiceChannel : HHMES.WebServiceReference.WCF_InventoryModuleService.IInventoryModuleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryModuleServiceClient : System.ServiceModel.ClientBase<HHMES.WebServiceReference.WCF_InventoryModuleService.IInventoryModuleService>, HHMES.WebServiceReference.WCF_InventoryModuleService.IInventoryModuleService {
        
        public InventoryModuleServiceClient() {
        }
        
        public InventoryModuleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryModuleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryModuleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryModuleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void IA_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate) {
            base.Channel.IA_ApprovalBusiness(loginTicket, keyValue, flagApp, appUser, appDate);
        }
        
        public bool IA_CheckNoExists(byte[] loginTicket, string keyValue) {
            return base.Channel.IA_CheckNoExists(loginTicket, keyValue);
        }
        
        public bool IA_Delete(byte[] loginTicket, string keyValue) {
            return base.Channel.IA_Delete(loginTicket, keyValue);
        }
        
        public byte[] IA_GetBusinessByKey(byte[] loginTicket, string keyValue) {
            return base.Channel.IA_GetBusinessByKey(loginTicket, keyValue);
        }
        
        public byte[] IA_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo) {
            return base.Channel.IA_GetSummaryByParam(loginTicket, DocNoFrom, DocNoTo, docDateFrom, docDateTo);
        }
        
        public byte[] IA_Update(byte[] loginTicket, byte[] saveData) {
            return base.Channel.IA_Update(loginTicket, saveData);
        }
        
        public void IC_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate) {
            base.Channel.IC_ApprovalBusiness(loginTicket, keyValue, flagApp, appUser, appDate);
        }
        
        public bool IC_CheckNoExists(byte[] loginTicket, string keyValue) {
            return base.Channel.IC_CheckNoExists(loginTicket, keyValue);
        }
        
        public bool IC_Delete(byte[] loginTicket, string keyValue) {
            return base.Channel.IC_Delete(loginTicket, keyValue);
        }
        
        public byte[] IC_GetBusinessByKey(byte[] loginTicket, string keyValue) {
            return base.Channel.IC_GetBusinessByKey(loginTicket, keyValue);
        }
        
        public byte[] IC_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo) {
            return base.Channel.IC_GetSummaryByParam(loginTicket, DocNoFrom, DocNoTo, docDateFrom, docDateTo);
        }
        
        public byte[] IC_Update(byte[] loginTicket, byte[] saveData) {
            return base.Channel.IC_Update(loginTicket, saveData);
        }
        
        public void IN_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate) {
            base.Channel.IN_ApprovalBusiness(loginTicket, keyValue, flagApp, appUser, appDate);
        }
        
        public bool IN_CheckNoExists(byte[] loginTicket, string keyValue) {
            return base.Channel.IN_CheckNoExists(loginTicket, keyValue);
        }
        
        public bool IN_Delete(byte[] loginTicket, string keyValue) {
            return base.Channel.IN_Delete(loginTicket, keyValue);
        }
        
        public byte[] IN_GetBusinessByKey(byte[] loginTicket, string keyValue) {
            return base.Channel.IN_GetBusinessByKey(loginTicket, keyValue);
        }
        
        public byte[] IN_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo) {
            return base.Channel.IN_GetSummaryByParam(loginTicket, DocNoFrom, DocNoTo, docDateFrom, docDateTo);
        }
        
        public byte[] IN_Update(byte[] loginTicket, byte[] saveData) {
            return base.Channel.IN_Update(loginTicket, saveData);
        }
        
        public void IO_ApprovalBusiness(byte[] loginTicket, string keyValue, string flagApp, string appUser, System.DateTime appDate) {
            base.Channel.IO_ApprovalBusiness(loginTicket, keyValue, flagApp, appUser, appDate);
        }
        
        public bool IO_CheckNoExists(byte[] loginTicket, string keyValue) {
            return base.Channel.IO_CheckNoExists(loginTicket, keyValue);
        }
        
        public bool IO_Delete(byte[] loginTicket, string keyValue) {
            return base.Channel.IO_Delete(loginTicket, keyValue);
        }
        
        public byte[] IO_GetBusinessByKey(byte[] loginTicket, string keyValue) {
            return base.Channel.IO_GetBusinessByKey(loginTicket, keyValue);
        }
        
        public byte[] IO_GetSummaryByParam(byte[] loginTicket, string DocNoFrom, string DocNoTo, System.DateTime docDateFrom, System.DateTime docDateTo) {
            return base.Channel.IO_GetSummaryByParam(loginTicket, DocNoFrom, DocNoTo, docDateFrom, docDateTo);
        }
        
        public byte[] IO_Update(byte[] loginTicket, byte[] saveData) {
            return base.Channel.IO_Update(loginTicket, saveData);
        }
    }
}
